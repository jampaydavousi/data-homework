--Drop the table if they already exist to prevent of redundant rows after each import,
--In the reverse order that they are created and its respective CSV is imported
DROP TABLE IF EXISTS titles;
DROP TABLE IF EXISTS salaries;
DROP TABLE IF EXISTS dept_manager;
DROP TABLE IF EXISTS dept_emp;
DROP TABLE IF EXISTS employees;
DROP TABLE IF EXISTS departments;
	
--Create the 'departments' from the script generated by the ERD
CREATE TABLE departments (
	dept_no VARCHAR PRIMARY KEY,
	dept_name VARCHAR
);
--Execute to make sure departments.csv was imported to the 'departments' table
SELECT * FROM departments;


--Create the 'employees' from the script generated by the ERD	
CREATE TABLE employees (
	emp_no INT PRIMARY KEY,
	birth_date DATE,
	first_name VARCHAR,
	last_name VARCHAR,
	gender VARCHAR,
	hire_date DATE
);
--Execute to make sure employees.csv was imported to the 'employees' table	
SELECT * FROM employees;


--Create the 'dept_emp' from the script generated by the ERD	
CREATE TABLE dept_emp (
	emp_no INT NOT NULL,
	dept_no VARCHAR NOT NULL,
	from_date DATE,
	to_date DATE,
	FOREIGN KEY (emp_no) REFERENCES employees(emp_no),
	FOREIGN KEY (dept_no) REFERENCES departments(dept_no)
	);
--Execute to make sure dept_emp.csv was imported to the 'dept_emp' table	
SELECT * FROM dept_emp;


--Create the 'dept_manager' from the script generated by the ERD
CREATE TABLE dept_manager (
	dept_no VARCHAR NOT NULL,
	emp_no INT NOT NULL,
	from_date DATE,
	to_date DATE,
	FOREIGN KEY (dept_no) REFERENCES departments(dept_no),
	FOREIGN KEY (emp_no) REFERENCES employees(emp_no)
	);
--Execute to make sure dept_manager.csv was imported to the 'dept_manager' table	
SELECT * FROM dept_manager;


--Create the 'salaries' from the script generated by the ERD
CREATE TABLE salaries (
	emp_no INT NOT NULL,
	salary INT,
	from_date DATE,
	to_date DATE,
	FOREIGN KEY (emp_no) REFERENCES employees(emp_no)
);
--Execute to make sure salaries.csv was imported to the 'salaries' table	
SELECT * FROM salaries;


--Create the 'titles' from the script generated by the ERD
CREATE TABLE titles (
	emp_no INT NOT NULL,
	title VARCHAR,
	from_date DATE,
	to_date DATE,
	FOREIGN KEY (emp_no) REFERENCES employees(emp_no)
);
--Execute to make sure titles.csv was imported to the 'salaries' table		
SELECT * FROM titles;



--List the following details of each employee: employee number, last name, first name, gender, and salary.
SELECT employees.emp_no, employees.last_name, employees.first_name, employees.gender, salaries.salary
FROM employees 
	LEFT JOIN salaries
	ON employees.emp_no = salaries.emp_no
	
--List employees who were hired in 1986.	
SELECT emp_no, first_name, last_name
FROM employees
WHERE hire_date BETWEEN '1986-01-01' AND '1986-12-31'
;
	
--List the manager of each department with the following information: department number, department name,
--the manager's employee number, last name, first name, and start and end employment dates.	

--joining information from 3 tables employees, dept_manager, and departments
SELECT dept_manager.dept_no, departments.dept_name, dept_manager.emp_no, employees.last_name, 
	employees.first_name, dept_manager.from_date, dept_manager.to_date
FROM dept_manager
	INNER JOIN employees
	ON employees.emp_no = dept_manager.emp_no
	
	INNER JOIN departments
	ON dept_manager.dept_no = departments.dept_no
;

--List the department of each employee with the following information: employee number, last name, 
--first name, and department name.

--joining information from 3 tables employees, dept_emp, and departments
SELECT employees.emp_no, employees.last_name, employees.first_name, departments.dept_name
FROM employees
	INNER JOIN dept_emp
	ON employees.emp_no = dept_emp.emp_no
	
	INNER JOIN departments
	ON dept_emp.dept_no = departments.dept_no
;

--List all employees whose first name is "Hercules" and last names begin with "B."
SELECT employees.emp_no, employees.last_name, employees.first_name
FROM employees
WHERE employees.first_name = 'Hercules' AND employees.last_name LIKE 'B%'
;

--List all employees in the Sales department, including their employee number, last name, first name, 
--and department name.

----joining information from 3 tables employees, dept_emp, and departments

SELECT employees.emp_no, employees.last_name, employees.first_name, departments.dept_name
FROM employees
	INNER JOIN dept_emp
	ON employees.emp_no = dept_emp.emp_no
	
	INNER JOIN departments
	ON dept_emp.dept_no = departments.dept_no

WHERE departments.dept_name = 'Sales'
;

--List all employees in the Sales and Development departments, including their employee number, last name,
--first name, and department name.

----joining information from 3 tables employees, dept_emp, and departments
SELECT employees.emp_no, employees.last_name, employees.first_name, departments.dept_name
FROM employees
	
	INNER JOIN dept_emp
	ON employees.emp_no = dept_emp.emp_no
	
	INNER JOIN departments
	ON dept_emp.dept_no = departments.dept_no

WHERE
	departments.dept_name = 'Sales' 
	OR departments.dept_name = 'Development'
;

--In descending order, list the frequency count of employee last names, i.e., how many employees share
--each last name.

SELECT employees.last_name,
COUNT(employees.last_name)
FROM employees
	GROUP BY employees.last_name
	ORDER BY COUNT(employees.last_name) DESC
;